<style>
  .chart-container {
    position: relative;
    margin: auto;
    width:60vw;
  }
</style>

<% @dancers = Dancer.all %>

<body>
  <%= javascript_include_tag "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" %>
  <div class="chart-container">
    <canvas id="years"></canvas>
  </div>
  <div class="chart-container">
    <canvas id="genders"></canvas>
  </div>
  <div class="chart-container">
    <canvas id="experience"></canvas>
  <div>
  <script>
    document.addEventListener("DOMContentLoaded", function(event) {

      let rawDancers = '<%= @dancers.to_json %>';
      rawDancers = rawDancers.replace(/&quot;/g, '"');
      // console.log(rawDancers);
      let dancers = JSON.parse(rawDancers);
      // console.log(dancers);

      //Pulled these from the backend
      const GENDER_VALUES = {
        "male": "Male",
        "female": "Female",
        "trans_male": "Transgender male",
        "trans_female": "Transgender female",
        "nonconforming": "Genderqueer/gender nonconforming",
        "decline": "Decline to answer",
        "other": "Other",
      };

      const YEAR_VALUES = {
        "1": "Freshman or younger",
        "2": "Sophomore",
        "3": "Junior",
        "4": "Senior or older",
        "5": "na"
      };

      const DANCE_EXPERIENCE_VALUES = {
        "no": "No",
        "yes_in_afx": "Yes, and I have been in AFX before",
        "yes_not_in_afx": "Yes, but I have not been in AFX before",
      };

      // Initialize all the categories that we're going to be sorting on
      const years = {}
      Object.keys(YEAR_VALUES).forEach((y) => {
        years[y] = 0;
      });

      const genders = {};
      Object.keys(GENDER_VALUES).forEach((g) => {
        genders[g] = 0;
      });

      const experience = {};
      Object.keys(DANCE_EXPERIENCE_VALUES).forEach((e) => {
        experience[e] = 0;
      });

      // Increment the counts of each category per dancer
      for (const dancer of dancers) {
        years[dancer.year] += 1;
        genders[dancer.gender] += 1;
        experience[dancer.dance_experience] += 1;
      }

      // console.log("years", years);
      // console.log("genders", genders);
      // console.log("experience", experience);

      // Create year chart
      const yearData = {
        labels: Object.keys(years).map((key) => YEAR_VALUES[key]),
        datasets: [{
            data: Object.values(years),
            label: "All Dancers",
            backgroundColor: "#FFDAC1"
        }]
      };

      const yearOptions = {
        title: {
          text: "Year",
          display: true,
          fontSize: 32
        },
        scale: {
          beginAtZero: true
        }
      };

      const yearElement = document.getElementById('years').getContext('2d');
      const yearsChart = new Chart(yearElement, {
        type: 'radar',
        data: yearData,
        options: yearOptions
      });

      // Create gender chart
      const genderData = {
        labels: Object.keys(genders).map((key) => GENDER_VALUES[key]),
        datasets: [{
            data: Object.values(genders),
            label: "All Dancers",
            backgroundColor: "#B5EAD7"
        }]
      };

      const genderOptions = {
        title: {
          text: "Gender",
          display: true,
          fontSize: 32
        },
        scale: {
          beginAtZero: true
        }
      };

      const genderElement = document.getElementById('genders').getContext('2d');
      const genderChart = new Chart(genderElement, {
        type: 'radar',
        data: genderData,
        options: genderOptions
      });

      // Create experience chart
      const experienceData = {
        labels: Object.keys(experience).map((key) => DANCE_EXPERIENCE_VALUES[key]),
        datasets: [{
            data: Object.values(experience),
            label: "All Dancers",
            backgroundColor: "#C7CEEA"
        }]
      };

      const experienceOptions = {
        title: {
          text: "Have you done AFX before?",
          display: true,
          fontSize: 32
        },
        scale: {
          beginAtZero: true
        }
      };

      const experienceElement = document.getElementById('experience').getContext('2d');
      const experienceChart = new Chart(experienceElement, {
        type: 'radar',
        data: experienceData,
        options: experienceOptions
      });
    });
  </script>
</body>
